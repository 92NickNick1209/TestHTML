<!DOCTYPE html>
<html lang="zh-Hant">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>雷霆戰機 - 簡易版</title>
  <style>
    body {
      margin: 0;
      background-color: black;
      overflow: hidden;
    }
    canvas {
      display: block;
      margin: 0 auto;
      background-color: #111;
      border: 2px solid #444;
      touch-action: none; /* 防止手機瀏覽器滑動 */
    }
  </style>
</head>
<body>
  <canvas id="gameCanvas" width="400" height="700"></canvas>

  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');

    // 玩家設定
    let player = {
      x: canvas.width / 2 - 20,
      y: canvas.height - 100,
      width: 40,
      height: 40,
      speed: 10
    };

    // 子彈資料
    let bullets = [];
    let lastShot = 0;

    function drawPlayer() {
      ctx.fillStyle = 'lime';
      ctx.fillRect(player.x, player.y, player.width, player.height);
    }

    function drawBullets() {
      ctx.fillStyle = 'yellow';
      bullets.forEach(bullet => {
        ctx.fillRect(bullet.x, bullet.y, bullet.width, bullet.height);
      });
    }

    function updateBullets() {
      bullets.forEach(b => b.y -= b.speed);
      bullets = bullets.filter(b => b.y > -b.height);
    }

    function gameLoop(timestamp) {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // 自動發射子彈
      if (timestamp - lastShot > 200) {
        bullets.push({
          x: player.x + player.width / 2 - 2,
          y: player.y - 10,
          width: 4,
          height: 10,
          speed: 8
        });
        lastShot = timestamp;
      }

      updateBullets();
      drawPlayer();
      drawBullets();

      requestAnimationFrame(gameLoop);
    }

    // ✅ 手機觸控控制
    canvas.addEventListener('touchmove', function (e) {
      const touch = e.touches[0];
      const rect = canvas.getBoundingClientRect();
      player.x = touch.clientX - rect.left - player.width / 2;
      player.y = touch.clientY - rect.top - player.height / 2;
    });

    // ✅ 滑鼠控制
    canvas.addEventListener('mousemove', function (e) {
      const rect = canvas.getBoundingClientRect();
      player.x = e.clientX - rect.left - player.width / 2;
      player.y = e.clientY - rect.top - player.height / 2;
    });

    requestAnimationFrame(gameLoop);
  </script>
</body>
</html>
